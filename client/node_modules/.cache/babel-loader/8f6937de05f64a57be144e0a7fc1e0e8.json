{"ast":null,"code":"var _jsxFileName = \"/Users/aksharbhagat/todo_app/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TodoItem from './components/TodoItem';\nimport AddTodo from './components/AddTodo';\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    getTodos().then(response => setTodos([...response.data.todos])).catch(err => console.log(err));\n  };\n\n  const handleSaveTodo = (e, formData) => {\n    console.log(formData);\n    e.preventDefault();\n    addTodo(formData).then(({\n      status,\n      data\n    }) => {\n      if (status !== 201) {\n        throw new Error('Error! Todo not saved');\n      }\n\n      setTodos([...todos]);\n    }).catch(err => console.log(err));\n    window.location.reload();\n  };\n\n  const handleUpdateTodo = todo => {\n    updateTodo(todo).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not updated');\n      }\n\n      setTodos([...todos]);\n    }).catch(err => console.log(err));\n    window.location.reload();\n  };\n\n  const handleDeleteTodo = _id => {\n    deleteTodo(_id).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not deleted');\n      }\n\n      setTodos([...todos]);\n    }).catch(err => console.log(err));\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n      saveTodo: handleSaveTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n      updateTodo: handleUpdateTodo,\n      deleteTodo: handleDeleteTodo,\n      todo: todo\n    }, todo._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aksharbhagat/todo_app/client/src/App.tsx"],"names":["React","useEffect","useState","TodoItem","AddTodo","getTodos","addTodo","updateTodo","deleteTodo","App","todos","setTodos","fetchTodos","then","response","data","catch","err","console","log","handleSaveTodo","e","formData","preventDefault","status","Error","window","location","reload","handleUpdateTodo","todo","handleDeleteTodo","_id","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport TodoItem from './components/TodoItem'\nimport AddTodo from './components/AddTodo'\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './API'\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([])\n\n  useEffect(() => {\n    fetchTodos()\n  }, [])\n\n  const fetchTodos = (): void => {\n    getTodos()\n    .then( (response) => setTodos([...response.data.todos]))\n    .catch((err: Error) => console.log(err))\n\n  }\n\n const handleSaveTodo = (e: React.FormEvent, formData: ITodo): void => {\n  console.log(formData)\n   e.preventDefault()\n   addTodo(formData)\n   .then(({ status, data }) => {\n    if (status !== 201) {\n      throw new Error('Error! Todo not saved')\n    }\n    setTodos([...todos])\n  })\n  .catch((err) => console.log(err))\n     window.location.reload();\n\n }\n\n  const handleUpdateTodo = (todo: ITodo): void => {\n    updateTodo(todo)\n    .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error('Error! Todo not updated')\n        }\n        setTodos([...todos])\n      })\n      .catch((err) => console.log(err))\n      window.location.reload();\n\n  }\n\n  const handleDeleteTodo = (_id: string): void => {\n    deleteTodo(_id)\n    .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error('Error! Todo not deleted')\n        }\n        setTodos([...todos])\n      })\n\n      .catch((err) => console.log(err))\n      window.location.reload();\n\n  }\n\n  return (\n    <main className='App'>\n      <h1>My Todos</h1>\n      <AddTodo saveTodo={handleSaveTodo} />\n      {todos.map((todo: ITodo) => (\n        <TodoItem\n          key={todo._id}\n          updateTodo={handleUpdateTodo}\n          deleteTodo={handleDeleteTodo}\n          todo={todo}\n        />\n      ))}\n    </main>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}