{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:4000';\nexport const getTodos = async () => {\n  try {\n    const todos = await axios.get(baseUrl + '/todos');\n    console.log(todos);\n    return todos;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const addTodo = async (formData) => {\n  try {\n    console.log(formData);\n    const todo = {\n      name: formData.name,\n      description: formData.description,\n      status: false\n    };\n    console.log(todo);\n    const saveTodo = await axios.post(baseUrl + '/add-todo', todo);\n    return saveTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const updateTodo = async (todo) => {\n  try {\n    const todoUpdate = {\n      status: true\n    };\n    const updatedTodo = await axios.put(`${baseUrl}/edit-todo/${todo._id}`, todoUpdate);\n    return updatedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const deleteTodo = async (_id) => {\n  try {\n    const deletedTodo = await axios.delete(`${baseUrl}/delete-todo/${_id}`);\n    return deletedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};","map":{"version":3,"sources":["/Users/aksharbhagat/todo_app/client/src/API.ts"],"names":["axios","baseUrl","getTodos","todos","get","console","log","error","Error","addTodo","formData","todo","name","description","status","saveTodo","post","updateTodo","todoUpdate","updatedTodo","put","_id","deleteTodo","deletedTodo","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,MAAMC,OAAe,GAAG,uBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAiD;AACvE,MAAI;AACF,UAAMC,KAAiC,GAAG,MAAMH,KAAK,CAACI,GAAN,CAC9CH,OAAO,GAAG,QADoC,CAAhD;AAGAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,WAAOA,KAAP;AACD,GAND,CAME,OAAOI,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAVM;AAYP,OAAO,MAAME,OAAO,GAAG,OACrBC,QADqB,KAEmB;AACxC,MAAI;AACFL,IAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACA,UAAMC,IAAwB,GAAG;AAC/BC,MAAAA,IAAI,EAAEF,QAAQ,CAACE,IADgB;AAE/BC,MAAAA,WAAW,EAAEH,QAAQ,CAACG,WAFS;AAG/BC,MAAAA,MAAM,EAAE;AAHuB,KAAjC;AAKAT,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACA,UAAMI,QAAoC,GAAG,MAAMf,KAAK,CAACgB,IAAN,CACjDf,OAAO,GAAG,WADuC,EAEjDU,IAFiD,CAAnD;AAIA,WAAOI,QAAP;AACD,GAbD,CAaE,OAAOR,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAnBM;AAqBP,OAAO,MAAMU,UAAU,GAAG,OACxBN,IADwB,KAEgB;AACxC,MAAI;AACF,UAAMO,UAAiC,GAAG;AACxCJ,MAAAA,MAAM,EAAE;AADgC,KAA1C;AAGA,UAAMK,WAAuC,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CACnD,GAAEnB,OAAQ,cAAaU,IAAI,CAACU,GAAI,EADmB,EAEpDH,UAFoD,CAAtD;AAIA,WAAOC,WAAP;AACD,GATD,CASE,OAAOZ,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAfM;AAiBP,OAAO,MAAMe,UAAU,GAAG,OACxBD,GADwB,KAEgB;AACxC,MAAI;AACF,UAAME,WAAuC,GAAG,MAAMvB,KAAK,CAACwB,MAAN,CACnD,GAAEvB,OAAQ,gBAAeoB,GAAI,EADsB,CAAtD;AAGA,WAAOE,WAAP;AACD,GALD,CAKE,OAAOhB,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAXM","sourcesContent":["import axios, { AxiosResponse } from 'axios'\n\nconst baseUrl: string = 'http://localhost:4000'\n\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\n      baseUrl + '/todos'\n    )\n    console.log(todos)\n    return todos\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport const addTodo = async (\n  formData: ITodo\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    console.log(formData)\n    const todo: Omit<ITodo, '_id'> = {\n      name: formData.name,\n      description: formData.description,\n      status: false,\n    }\n    console.log(todo)\n    const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\n      baseUrl + '/add-todo',\n      todo\n    )\n    return saveTodo\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport const updateTodo = async (\n  todo: ITodo\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const todoUpdate: Pick<ITodo, 'status'> = {\n      status: true,\n    }\n    const updatedTodo: AxiosResponse<ApiDataType> = await axios.put(\n      `${baseUrl}/edit-todo/${todo._id}`,\n      todoUpdate\n    )\n    return updatedTodo\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport const deleteTodo = async (\n  _id: string\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\n      `${baseUrl}/delete-todo/${_id}`\n    )\n    return deletedTodo\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}